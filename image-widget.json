{"components":[{"type":"MarkdownEditor","mode":"view","content":{"version":"2.0","text":"As discussed, a List is a type, hence it is an object that has particular properties and particular methods that it can perform. Let's look at some of them below.\n\n## Indexing\n\nLists use zero-based indexing. This means that the first element of an array is located at the **0th** index.\n","mdHtml":"<p>As discussed, a List is a type, hence it is an object that has particular properties and particular methods that it can perform. Letâ€™s look at some of them below.</p>\n<h2 id=\"indexing\">Indexing</h2>\n<p>Lists use zero-based indexing. This means that the first element of an array is located at the <strong>0th</strong> index.</p>\n","cursorPosition":{"line":0,"ch":0},"comp_id":"30fcab5f-762a-47a5-b2f3-cbbb87d94f32"},"hash":"1","iteration":1},{"type":"MxGraphWidget","mode":"view","content":{"prevXml":"<mxGraphModel><root></root></mxGraphModel>","svg":"","path":"/api/collection/10370001/6069685319630848/page/5953703007748096/image/5752634986201088","caption":"","comp_id":"719b82a3-2dce-4d97-9401-1f487a23ebb0","waInstantlyOpened":true,"prevSvg":"<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"100px\" height=\"100px\" version=\"1.1\"></svg>","xml":"<mxGraphModel><root><mxCell id=\"0\"/><mxCell id=\"1\" parent=\"0\"/><mxCell id=\"6790\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 32px&quot; color=&quot;#ffffff&quot;&gt;'A'&lt;/font&gt;\" style=\"rounded=1;whiteSpace=wrap;html=1;fillColor=#0081C6;strokeColor=none;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"160\" y=\"120\" width=\"60\" height=\"60\" as=\"geometry\"/></mxCell><mxCell id=\"529\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 32px&quot; color=&quot;#ffffff&quot;&gt;'B'&lt;/font&gt;\" style=\"rounded=1;whiteSpace=wrap;html=1;fillColor=#0081C6;strokeColor=none;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"220\" y=\"120\" width=\"60\" height=\"60\" as=\"geometry\"/></mxCell><mxCell id=\"2292\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 32px&quot; color=&quot;#ffffff&quot;&gt;'C'&lt;/font&gt;\" style=\"rounded=1;whiteSpace=wrap;html=1;fillColor=#0081C6;strokeColor=none;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"280\" y=\"120\" width=\"60\" height=\"60\" as=\"geometry\"/></mxCell><mxCell id=\"1726\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 32px&quot; color=&quot;#ffffff&quot;&gt;'D'&lt;/font&gt;\" style=\"rounded=1;whiteSpace=wrap;html=1;fillColor=#0081C6;strokeColor=none;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"340\" y=\"120\" width=\"60\" height=\"60\" as=\"geometry\"/></mxCell><mxCell id=\"7869\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 32px&quot; color=&quot;#ffffff&quot;&gt;'E'&lt;/font&gt;\" style=\"rounded=1;whiteSpace=wrap;html=1;fillColor=#0081C6;strokeColor=none;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"400\" y=\"120\" width=\"60\" height=\"60\" as=\"geometry\"/></mxCell><mxCell id=\"268\" value=\"&lt;font color=&quot;#ffffff&quot; face=&quot;Courier New&quot;&gt;&lt;span style=&quot;font-size: 32px&quot;&gt;'F'&lt;/span&gt;&lt;/font&gt;\" style=\"rounded=1;whiteSpace=wrap;html=1;fillColor=#0081C6;strokeColor=none;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"460\" y=\"120\" width=\"60\" height=\"60\" as=\"geometry\"/></mxCell><mxCell id=\"7474\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=1;jettySize=auto;orthogonalLoop=1;\" edge=\"1\" parent=\"1\" source=\"5763\" target=\"6790\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"5763\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 24px&quot; color=&quot;#00d2b8&quot;&gt;&lt;b&gt;0&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"170\" y=\"200\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"8501\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=0;jettySize=auto;orthogonalLoop=1;\" edge=\"1\" parent=\"1\" source=\"5763\" target=\"5763\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"1479\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=0;jettySize=auto;orthogonalLoop=1;\" edge=\"1\" parent=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"><mxPoint x=\"200\" y=\"210\" as=\"sourcePoint\"/><mxPoint x=\"200\" y=\"210\" as=\"targetPoint\"/></mxGeometry></mxCell><mxCell id=\"3256\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=1;jettySize=auto;orthogonalLoop=1;\" edge=\"1\" parent=\"1\" source=\"3211\" target=\"529\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"3211\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 24px&quot; color=&quot;#00d2b8&quot;&gt;&lt;b&gt;1&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"230\" y=\"200\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"8451\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=1;jettySize=auto;orthogonalLoop=1;\" edge=\"1\" parent=\"1\" source=\"7505\" target=\"2292\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"7505\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 24px&quot; color=&quot;#00d2b8&quot;&gt;&lt;b&gt;2&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"290\" y=\"200\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"9243\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=1;jettySize=auto;orthogonalLoop=1;\" edge=\"1\" parent=\"1\" source=\"6014\" target=\"1726\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"6014\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 24px&quot; color=&quot;#00d2b8&quot;&gt;&lt;b&gt;3&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"350\" y=\"200\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"2353\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=1;jettySize=auto;orthogonalLoop=1;\" edge=\"1\" parent=\"1\" source=\"4665\" target=\"7869\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"4665\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 24px&quot; color=&quot;#00d2b8&quot;&gt;&lt;b&gt;4&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"410\" y=\"200\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"4815\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=1;jettySize=auto;orthogonalLoop=1;\" edge=\"1\" parent=\"1\" source=\"6505\" target=\"268\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"6505\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 24px&quot; color=&quot;#00d2b8&quot;&gt;&lt;b&gt;5&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"470\" y=\"200\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"6336\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;jettySize=auto;orthogonalLoop=1;\" edge=\"1\" parent=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"><mxPoint x=\"160\" y=\"210\" as=\"targetPoint\"/><mxPoint x=\"120\" y=\"210\" as=\"sourcePoint\"/></mxGeometry></mxCell><mxCell id=\"4057\" value=\"&lt;font face=&quot;Verdana&quot; style=&quot;font-size: 18px&quot; color=&quot;#f95700&quot;&gt;INDEX&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"60\" y=\"200\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"8031\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=1;entryX=0.5;entryY=1;jettySize=auto;orthogonalLoop=1;\" edge=\"1\" parent=\"1\" source=\"4057\" target=\"4057\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell></root></mxGraphModel>","prevPath":""},"hash":"2","iteration":0},{"type":"MarkdownEditor","mode":"view","content":{"version":"2.0","text":"Since each element has its own position, a list can contain duplicates of a single element because each duplicate is still unique in its position. For instance, we can have a list with five identical elements because even though the value of each element is the same, they all are still unique and can be differentiated amongst each other through their position in the list.","mdHtml":"<p>Since each element has its own position, a list can contain duplicates of a single element because each duplicate is still unique in its position. For instance, we can have a list with five identical elements because even though the value of each element is the same, they all are still unique and can be differentiated amongst each other through their position in the list.</p>\n","cursorPosition":{"line":0,"ch":0},"comp_id":"600863fa-1301-470c-9c13-3f18ed1aef92"},"hash":"3","iteration":0},{"type":"MxGraphWidget","mode":"view","content":{"prevXml":"<mxGraphModel><root><mxCell id=\"0\"/><mxCell id=\"1\" parent=\"0\"/><mxCell id=\"6790\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 32px&quot; color=&quot;#ffffff&quot;&gt;'A'&lt;/font&gt;\" style=\"rounded=1;whiteSpace=wrap;html=1;fillColor=#0081C6;strokeColor=none;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"160\" y=\"120\" width=\"60\" height=\"60\" as=\"geometry\"/></mxCell><mxCell id=\"529\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 32px&quot; color=&quot;#ffffff&quot;&gt;'B'&lt;/font&gt;\" style=\"rounded=1;whiteSpace=wrap;html=1;fillColor=#0081C6;strokeColor=none;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"220\" y=\"120\" width=\"60\" height=\"60\" as=\"geometry\"/></mxCell><mxCell id=\"2292\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 32px&quot; color=&quot;#ffffff&quot;&gt;'C'&lt;/font&gt;\" style=\"rounded=1;whiteSpace=wrap;html=1;fillColor=#0081C6;strokeColor=none;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"280\" y=\"120\" width=\"60\" height=\"60\" as=\"geometry\"/></mxCell><mxCell id=\"1726\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 32px&quot; color=&quot;#ffffff&quot;&gt;'D'&lt;/font&gt;\" style=\"rounded=1;whiteSpace=wrap;html=1;fillColor=#0081C6;strokeColor=none;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"340\" y=\"120\" width=\"60\" height=\"60\" as=\"geometry\"/></mxCell><mxCell id=\"7869\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 32px&quot; color=&quot;#ffffff&quot;&gt;'E'&lt;/font&gt;\" style=\"rounded=1;whiteSpace=wrap;html=1;fillColor=#0081C6;strokeColor=none;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"400\" y=\"120\" width=\"60\" height=\"60\" as=\"geometry\"/></mxCell><mxCell id=\"268\" value=\"&lt;font color=&quot;#ffffff&quot; face=&quot;Courier New&quot;&gt;&lt;span style=&quot;font-size: 32px&quot;&gt;'F'&lt;/span&gt;&lt;/font&gt;\" style=\"rounded=1;whiteSpace=wrap;html=1;fillColor=#0081C6;strokeColor=none;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"460\" y=\"120\" width=\"60\" height=\"60\" as=\"geometry\"/></mxCell><mxCell id=\"7474\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=1;jettySize=auto;orthogonalLoop=1;\" edge=\"1\" parent=\"1\" source=\"5763\" target=\"6790\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"5763\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 24px&quot; color=&quot;#00d2b8&quot;&gt;&lt;b&gt;0&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"170\" y=\"200\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"8501\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=0;jettySize=auto;orthogonalLoop=1;\" edge=\"1\" parent=\"1\" source=\"5763\" target=\"5763\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"1479\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=0;jettySize=auto;orthogonalLoop=1;\" edge=\"1\" parent=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"><mxPoint x=\"200\" y=\"210\" as=\"sourcePoint\"/><mxPoint x=\"200\" y=\"210\" as=\"targetPoint\"/></mxGeometry></mxCell><mxCell id=\"3256\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=1;jettySize=auto;orthogonalLoop=1;\" edge=\"1\" parent=\"1\" source=\"3211\" target=\"529\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"3211\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 24px&quot; color=&quot;#00d2b8&quot;&gt;&lt;b&gt;1&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"230\" y=\"200\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"8451\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=1;jettySize=auto;orthogonalLoop=1;\" edge=\"1\" parent=\"1\" source=\"7505\" target=\"2292\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"7505\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 24px&quot; color=&quot;#00d2b8&quot;&gt;&lt;b&gt;2&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"290\" y=\"200\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"9243\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=1;jettySize=auto;orthogonalLoop=1;\" edge=\"1\" parent=\"1\" source=\"6014\" target=\"1726\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"6014\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 24px&quot; color=&quot;#00d2b8&quot;&gt;&lt;b&gt;3&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"350\" y=\"200\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"2353\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=1;jettySize=auto;orthogonalLoop=1;\" edge=\"1\" parent=\"1\" source=\"4665\" target=\"7869\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"4665\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 24px&quot; color=&quot;#00d2b8&quot;&gt;&lt;b&gt;4&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"410\" y=\"200\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"4815\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=1;jettySize=auto;orthogonalLoop=1;\" edge=\"1\" parent=\"1\" source=\"6505\" target=\"268\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"6505\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 24px&quot; color=&quot;#00d2b8&quot;&gt;&lt;b&gt;5&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"470\" y=\"200\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"6336\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;jettySize=auto;orthogonalLoop=1;\" edge=\"1\" parent=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"><mxPoint x=\"160\" y=\"210\" as=\"targetPoint\"/><mxPoint x=\"120\" y=\"210\" as=\"sourcePoint\"/></mxGeometry></mxCell><mxCell id=\"4057\" value=\"&lt;font face=&quot;Verdana&quot; style=&quot;font-size: 18px&quot; color=&quot;#f95700&quot;&gt;INDEX&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"60\" y=\"200\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"8031\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=1;entryX=0.5;entryY=1;jettySize=auto;orthogonalLoop=1;\" edge=\"1\" parent=\"1\" source=\"4057\" target=\"4057\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell></root></mxGraphModel>","svg":"","path":"/api/collection/10370001/6069685319630848/page/5953703007748096/image/5033716155940864","caption":"","comp_id":"85bc3e27-2b69-4d20-86fa-e836b3d121d5","waInstantlyOpened":true,"prevSvg":"","xml":"<mxGraphModel><root><mxCell id=\"0\"/><mxCell id=\"1\" parent=\"0\"/><mxCell id=\"6790\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 32px&quot; color=&quot;#ffffff&quot;&gt;'A'&lt;/font&gt;\" style=\"rounded=1;whiteSpace=wrap;html=1;fillColor=#0081C6;strokeColor=none;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"160\" y=\"120\" width=\"60\" height=\"60\" as=\"geometry\"/></mxCell><mxCell id=\"529\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 32px&quot; color=&quot;#ffffff&quot;&gt;'A'&lt;/font&gt;\" style=\"rounded=1;whiteSpace=wrap;html=1;fillColor=#0081C6;strokeColor=none;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"220\" y=\"120\" width=\"60\" height=\"60\" as=\"geometry\"/></mxCell><mxCell id=\"2292\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 32px&quot; color=&quot;#ffffff&quot;&gt;'A'&lt;/font&gt;\" style=\"rounded=1;whiteSpace=wrap;html=1;fillColor=#0081C6;strokeColor=none;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"280\" y=\"120\" width=\"60\" height=\"60\" as=\"geometry\"/></mxCell><mxCell id=\"1726\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 32px&quot; color=&quot;#ffffff&quot;&gt;'A'&lt;/font&gt;\" style=\"rounded=1;whiteSpace=wrap;html=1;fillColor=#0081C6;strokeColor=none;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"340\" y=\"120\" width=\"60\" height=\"60\" as=\"geometry\"/></mxCell><mxCell id=\"7869\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 32px&quot; color=&quot;#ffffff&quot;&gt;'A'&lt;/font&gt;\" style=\"rounded=1;whiteSpace=wrap;html=1;fillColor=#0081C6;strokeColor=none;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"400\" y=\"120\" width=\"60\" height=\"60\" as=\"geometry\"/></mxCell><mxCell id=\"268\" value=\"&lt;font color=&quot;#ffffff&quot; face=&quot;Courier New&quot;&gt;&lt;span style=&quot;font-size: 32px&quot;&gt;'A'&lt;/span&gt;&lt;/font&gt;\" style=\"rounded=1;whiteSpace=wrap;html=1;fillColor=#0081C6;strokeColor=none;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"460\" y=\"120\" width=\"60\" height=\"60\" as=\"geometry\"/></mxCell><mxCell id=\"7474\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=1;jettySize=auto;orthogonalLoop=1;\" parent=\"1\" source=\"5763\" target=\"6790\" edge=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"5763\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 24px&quot; color=&quot;#00d2b8&quot;&gt;&lt;b&gt;0&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"170\" y=\"200\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"8501\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=0;jettySize=auto;orthogonalLoop=1;\" parent=\"1\" source=\"5763\" target=\"5763\" edge=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"1479\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=0;jettySize=auto;orthogonalLoop=1;\" parent=\"1\" edge=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"><mxPoint x=\"200\" y=\"210\" as=\"sourcePoint\"/><mxPoint x=\"200\" y=\"210\" as=\"targetPoint\"/></mxGeometry></mxCell><mxCell id=\"3256\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=1;jettySize=auto;orthogonalLoop=1;\" parent=\"1\" source=\"3211\" target=\"529\" edge=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"3211\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 24px&quot; color=&quot;#00d2b8&quot;&gt;&lt;b&gt;1&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"230\" y=\"200\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"8451\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=1;jettySize=auto;orthogonalLoop=1;\" parent=\"1\" source=\"7505\" target=\"2292\" edge=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"7505\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 24px&quot; color=&quot;#00d2b8&quot;&gt;&lt;b&gt;2&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"290\" y=\"200\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"9243\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=1;jettySize=auto;orthogonalLoop=1;\" parent=\"1\" source=\"6014\" target=\"1726\" edge=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"6014\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 24px&quot; color=&quot;#00d2b8&quot;&gt;&lt;b&gt;3&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"350\" y=\"200\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"2353\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=1;jettySize=auto;orthogonalLoop=1;\" parent=\"1\" source=\"4665\" target=\"7869\" edge=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"4665\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 24px&quot; color=&quot;#00d2b8&quot;&gt;&lt;b&gt;4&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"410\" y=\"200\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"4815\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=1;jettySize=auto;orthogonalLoop=1;\" parent=\"1\" source=\"6505\" target=\"268\" edge=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"6505\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 24px&quot; color=&quot;#00d2b8&quot;&gt;&lt;b&gt;5&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"470\" y=\"200\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"6336\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;jettySize=auto;orthogonalLoop=1;\" parent=\"1\" edge=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"><mxPoint x=\"160\" y=\"210\" as=\"targetPoint\"/><mxPoint x=\"120\" y=\"210\" as=\"sourcePoint\"/></mxGeometry></mxCell><mxCell id=\"4057\" value=\"&lt;font face=&quot;Verdana&quot; style=&quot;font-size: 18px&quot; color=&quot;#f95700&quot;&gt;INDEX&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"60\" y=\"200\" width=\"40\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"8031\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=1;entryX=0.5;entryY=1;jettySize=auto;orthogonalLoop=1;\" parent=\"1\" source=\"4057\" target=\"4057\" edge=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell></root></mxGraphModel>","prevPath":"/api/collection/10370001/6069685319630848/page/5953703007748096/image/5752634986201088"},"hash":"4","iteration":0},{"type":"MarkdownEditor","mode":"view","content":{"version":"2.0","text":"## Accessing an Element\n\nTo access an element at a particular index we can use square brackets (`[]`).\n\nThe general syntax is as follows.","mdHtml":"<h2 id=\"accessing-an-element\">Accessing an Element</h2>\n<p>To access an element at a particular index we can use square brackets (<code>[]</code>).</p>\n<p>The general syntax is as follows.</p>\n","cursorPosition":{"line":0,"ch":0},"comp_id":"929a8888-0c56-4e6d-b6c4-d8236253fd53"},"hash":"5","iteration":0},{"type":"MxGraphWidget","mode":"view","content":{"prevXml":"<mxGraphModel><root><mxCell id=\"0\"/><mxCell id=\"1\" parent=\"0\"/><mxCell id=\"9670\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 36px&quot;&gt;&lt;b&gt;&lt;font color=&quot;#00d2b8&quot;&gt;listName&lt;/font&gt;&lt;font color=&quot;#f95700&quot;&gt;.&lt;/font&gt;&lt;font color=&quot;#0081c6&quot;&gt;add(&lt;/font&gt;&lt;font color=&quot;#00d2b8&quot;&gt;element&lt;/font&gt;&lt;font color=&quot;#0081c6&quot;&gt;)&lt;/font&gt;&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"-510\" y=\"90\" width=\"360\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"7559\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0.75;entryX=0;entryY=0.75;jettySize=auto;orthogonalLoop=1;\" parent=\"1\" source=\"9670\" target=\"9670\" edge=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell></root></mxGraphModel>","svg":"","path":"/api/collection/10370001/6069685319630848/page/5953703007748096/image/5514550453469184","caption":"","comp_id":"9280be83-2965-4bd6-9924-8d42d6effaea","waInstantlyOpened":true,"prevSvg":"","xml":"<mxGraphModel><root><mxCell id=\"0\"/><mxCell id=\"1\" parent=\"0\"/><mxCell id=\"9670\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 36px&quot;&gt;&lt;b&gt;&lt;font color=&quot;#00d2b8&quot;&gt;listName&lt;/font&gt;&lt;font color=&quot;#0081c6&quot;&gt;[&lt;/font&gt;&lt;font color=&quot;#00d2b8&quot;&gt;index&lt;/font&gt;&lt;font color=&quot;#0081c6&quot;&gt;]&lt;/font&gt;&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"-510\" y=\"90\" width=\"360\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"7559\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0.75;entryX=0;entryY=0.75;jettySize=auto;orthogonalLoop=1;\" parent=\"1\" source=\"9670\" target=\"9670\" edge=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell></root></mxGraphModel>","prevPath":"/api/collection/10370001/6069685319630848/page/5953703007748096/image/5449770065723392"},"hash":"6","iteration":0},{"type":"MarkdownEditor","mode":"view","content":{"version":"2.0","text":"Let's look at an example below.","mdHtml":"<p>Letâ€™s look at an example below.</p>\n","cursorPosition":{"line":0,"ch":0},"comp_id":"255663ca-cbf7-4b13-8951-31d2b49e6442"},"hash":"7","iteration":0},{"type":"Code","mode":"view","content":{"solutionContent":"\n\n\n","codeKeys":[{"codeKeysToReplace":[]}],"judgeContent":null,"hiddenCodeContent":{"prependCode":"\n\n","appendCode":"\n\n","codeSelection":"prependCode"},"enableStdin":false,"caption":"","theme":"default","evaluateWithoutExecution":false,"comp_id":"a394c3ca-ea0f-4444-8fd1-8b85d370f416","staticEntryFileName":true,"judgeContentPrepend":"\n\n\n","timeLimit":30,"staticEntryName":true,"specialInput":"no-input","allowDownload":false,"evaluateLanguage":null,"additionalContent":[],"judgeHints":null,"showSolution":false,"selectedIndex":0,"judge":false,"treatOutputAsHTML":false,"version":"7.0","title":"","language":"dart","content":"main() {\n  var listOfVegetables = ['potato', 'carrot', 'cucumber'];\n\n  print(listOfVegetables[1]);\n}","entryFileName":"main.dart","initiateCodeKeyReplacement":false,"enableHiddenCode":false,"dockerJob":{},"runnable":true},"hash":"8","iteration":0},{"type":"MarkdownEditor","mode":"view","content":{"version":"2.0","text":"In the code snippet above, we are accessing the second element of the list `listOfVegetables` which is the element at the index **1**.","mdHtml":"<p>In the code snippet above, we are accessing the second element of the list <code>listOfVegetables</code> which is the element at the index <strong>1</strong>.</p>\n","cursorPosition":{"line":0,"ch":0},"comp_id":"1c369318-1ae5-43af-90f2-8a743f73befa"},"hash":"9","iteration":0},{"type":"MarkdownEditor","mode":"view","content":{"version":"2.0","text":"## Finding the Length of a List\n\nThe length of a list is simply the number of elements in that list. To find the length of a list, we can access the `length` property using `.` symbol. \n\nThe basic syntax is as follows.\n\n","mdHtml":"<h2 id=\"finding-the-length-of-a-list\">Finding the Length of a List</h2>\n<p>The length of a list is simply the number of elements in that list. To find the length of a list, we can access the <code>length</code> property using <code>.</code> symbol.</p>\n<p>The basic syntax is as follows.</p>\n","cursorPosition":{"line":0,"ch":0},"comp_id":"9b8f3c36-dac6-42e3-9917-87e0e1f21860"},"hash":"10","iteration":0},{"type":"MxGraphWidget","mode":"view","content":{"prevXml":"<mxGraphModel><root><mxCell id=\"0\"/><mxCell id=\"1\" parent=\"0\"/><mxCell id=\"9670\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 36px&quot;&gt;&lt;b&gt;&lt;font color=&quot;#0081c6&quot;&gt;var&lt;/font&gt;&lt;font color=&quot;#751a21&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;font color=&quot;#00d2b8&quot;&gt;listName&lt;/font&gt;&lt;font color=&quot;#751a21&quot;&gt; &lt;/font&gt;&lt;font color=&quot;#f95700&quot;&gt;=&lt;/font&gt;&lt;font color=&quot;#751a21&quot;&gt; &lt;/font&gt;&lt;font color=&quot;#0081c6&quot;&gt;[&lt;/font&gt;&lt;font color=&quot;#00d2b8&quot;&gt;elem 1&lt;/font&gt;&lt;font color=&quot;#0081c6&quot;&gt;,&lt;/font&gt;&lt;font color=&quot;#751a21&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;font color=&quot;#00d2b8&quot;&gt;elem 2&lt;/font&gt;&lt;font color=&quot;#0081c6&quot;&gt;,&lt;/font&gt;&lt;font color=&quot;#f95700&quot;&gt;...&lt;/font&gt;&lt;font color=&quot;#0081c6&quot;&gt;,&lt;/font&gt;&lt;font color=&quot;#00d2b8&quot;&gt;elem n&lt;/font&gt;&lt;font color=&quot;#0081c6&quot;&gt;]&lt;/font&gt;&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"-510\" y=\"90\" width=\"940\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"7559\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0.75;entryX=0;entryY=0.75;jettySize=auto;orthogonalLoop=1;\" parent=\"1\" source=\"9670\" target=\"9670\" edge=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell></root></mxGraphModel>","svg":"","path":"/api/collection/10370001/6069685319630848/page/5953703007748096/image/5554560355532800","caption":"","comp_id":"f49c12fa-c5e0-4469-ac0e-e89644976e9c","waInstantlyOpened":true,"prevSvg":"","xml":"<mxGraphModel><root><mxCell id=\"0\"/><mxCell id=\"1\" parent=\"0\"/><mxCell id=\"9670\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 36px&quot;&gt;&lt;b&gt;&lt;font color=&quot;#00d2b8&quot;&gt;listName&lt;/font&gt;&lt;font color=&quot;#f95700&quot;&gt;.&lt;/font&gt;&lt;font color=&quot;#0081c6&quot;&gt;length&lt;/font&gt;&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"-510\" y=\"90\" width=\"360\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"7559\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0.75;entryX=0;entryY=0.75;jettySize=auto;orthogonalLoop=1;\" parent=\"1\" source=\"9670\" target=\"9670\" edge=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell></root></mxGraphModel>","prevPath":"/api/collection/10370001/6069685319630848/page/6559488280625152/image/4771560705490944"},"hash":"11","iteration":0},{"type":"MarkdownEditor","mode":"view","content":{"version":"2.0","text":"Let's find the length of our `listOfVegetables`.","mdHtml":"<p>Letâ€™s find the length of our <code>listOfVegetables</code>.</p>\n","cursorPosition":{"line":0,"ch":0},"comp_id":"f6e0af6d-c489-4b35-9812-bad9cd4b17b3"},"hash":"12","iteration":0},{"type":"Code","mode":"view","content":{"solutionContent":"\n\n\n","codeKeys":[{"codeKeysToReplace":[]}],"judgeContent":null,"hiddenCodeContent":{"prependCode":"\n\n","appendCode":"\n\n","codeSelection":"prependCode"},"enableStdin":false,"caption":"","theme":"default","evaluateWithoutExecution":false,"comp_id":"6f16ce43-3867-4697-8ca0-2e8b9284394d","staticEntryFileName":true,"highlightedLines":"4","judgeContentPrepend":"\n\n\n","timeLimit":30,"staticEntryName":true,"specialInput":"no-input","allowDownload":false,"evaluateLanguage":null,"additionalContent":[],"judgeHints":null,"showSolution":false,"selectedIndex":0,"judge":false,"treatOutputAsHTML":false,"version":"7.0","title":"","language":"dart","content":"main() {\n  var listOfVegetables = ['potato', 'carrot', 'cucumber'];\n\n  print(listOfVegetables.length);\n}","entryFileName":"main.dart","initiateCodeKeyReplacement":false,"enableHiddenCode":false,"dockerJob":{},"runnable":true},"hash":"13","iteration":0},{"type":"MarkdownEditor","mode":"view","content":{"version":"2.0","text":"When you press RUN, the number **3** should be displayed because `listOfVegetables` has three elements. ","mdHtml":"<p>When you press RUN, the number <strong>3</strong> should be displayed because <code>listOfVegetables</code> has three elements.</p>\n","cursorPosition":{"line":0,"ch":0},"comp_id":"02382a42-2e2d-46a7-8f8c-eb2e8c365b41"},"hash":"14","iteration":0},{"type":"MarkdownEditor","mode":"view","content":{"version":"2.0","text":"## Adding a Single Element\n\nWe can add a single element to the end of an already existing list using the `add` method. The only condition is that the element you add must be of the same type as the elements of the list.\n\nThe `add` method has a single parameter which is the element you want to add to a list. The type of the parameter depends on the list you call the method on.\n\nThe general syntax is as follows.","mdHtml":"<h2 id=\"adding-a-single-element\">Adding a Single Element</h2>\n<p>We can add a single element to the end of an already existing list using the <code>add</code> method. The only condition is that the element you add must be of the same type as the elements of the list.</p>\n<p>The <code>add</code> method has a single parameter which is the element you want to add to a list. The type of the parameter depends on the list you call the method on.</p>\n<p>The general syntax is as follows.</p>\n","cursorPosition":{"line":0,"ch":0},"comp_id":"39013329-259a-4517-ae2e-e34db4ef80da"},"hash":"15","iteration":0},{"type":"MxGraphWidget","mode":"view","content":{"prevXml":"<mxGraphModel><root><mxCell id=\"0\"/><mxCell id=\"1\" parent=\"0\"/><mxCell id=\"9670\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 36px&quot;&gt;&lt;b&gt;&lt;font color=&quot;#00d2b8&quot;&gt;listName&lt;/font&gt;&lt;font color=&quot;#f95700&quot;&gt;.&lt;/font&gt;&lt;font color=&quot;#0081c6&quot;&gt;length&lt;/font&gt;&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"-510\" y=\"90\" width=\"360\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"7559\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0.75;entryX=0;entryY=0.75;jettySize=auto;orthogonalLoop=1;\" parent=\"1\" source=\"9670\" target=\"9670\" edge=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell></root></mxGraphModel>","svg":"","path":"/api/collection/10370001/6069685319630848/page/5953703007748096/image/5449770065723392","caption":"","comp_id":"dcc0dcee-9082-47ec-a38e-e8a9882c4404","waInstantlyOpened":true,"prevSvg":"","xml":"<mxGraphModel><root><mxCell id=\"0\"/><mxCell id=\"1\" parent=\"0\"/><mxCell id=\"9670\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 36px&quot;&gt;&lt;b&gt;&lt;font color=&quot;#00d2b8&quot;&gt;listName&lt;/font&gt;&lt;font color=&quot;#f95700&quot;&gt;.&lt;/font&gt;&lt;font color=&quot;#0081c6&quot;&gt;add(&lt;/font&gt;&lt;font color=&quot;#00d2b8&quot;&gt;element&lt;/font&gt;&lt;font color=&quot;#0081c6&quot;&gt;)&lt;/font&gt;&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"-510\" y=\"90\" width=\"360\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"7559\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0.75;entryX=0;entryY=0.75;jettySize=auto;orthogonalLoop=1;\" parent=\"1\" source=\"9670\" target=\"9670\" edge=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell></root></mxGraphModel>","prevPath":"/api/collection/10370001/6069685319630848/page/5953703007748096/image/5554560355532800"},"hash":"16","iteration":0},{"type":"MarkdownEditor","mode":"view","content":{"version":"2.0","text":"Let's add another vegetable to our `listOfVegetables`.","mdHtml":"<p>Letâ€™s add another vegetable to our <code>listOfVegetables</code>.</p>\n","cursorPosition":{"line":0,"ch":0},"comp_id":"4de7cb0d-fa32-4a30-a31a-d4eb077ba7fa"},"hash":"17","iteration":0},{"type":"Code","mode":"view","content":{"solutionContent":"\n\n\n","codeKeys":[{"codeKeysToReplace":[]}],"judgeContent":null,"hiddenCodeContent":{"prependCode":"\n\n","appendCode":"\n\n","codeSelection":"prependCode"},"enableStdin":false,"caption":"","theme":"default","evaluateWithoutExecution":false,"comp_id":"a895c828-1743-47dc-a1b7-5f8120fec412","staticEntryFileName":true,"highlightedLines":"4","judgeContentPrepend":"\n\n\n","timeLimit":30,"staticEntryName":true,"specialInput":"no-input","allowDownload":false,"evaluateLanguage":null,"additionalContent":[],"judgeHints":null,"showSolution":false,"selectedIndex":0,"judge":false,"treatOutputAsHTML":false,"version":"7.0","title":"","language":"dart","content":"main() {\n  var listOfVegetables = ['potato', 'carrot', 'cucumber'];\n\n  listOfVegetables.add('cabbage');\n\n  print(listOfVegetables);\n}","entryFileName":"main.dart","initiateCodeKeyReplacement":false,"enableHiddenCode":false,"dockerJob":{},"runnable":true},"hash":"18","iteration":0},{"type":"MarkdownEditor","mode":"view","content":{"version":"2.0","text":"When you press RUN, you'll see that the updated list now also has *cabbage* as an element.","mdHtml":"<p>When you press RUN, youâ€™ll see that the updated list now also has <em>cabbage</em> as an element.</p>\n","cursorPosition":{"line":0,"ch":0},"comp_id":"3b885b79-beb2-45c8-9721-36beeae882a4"},"hash":"19","iteration":0},{"type":"MarkdownEditor","mode":"view","content":{"version":"2.0","text":"## Adding Multiple Elements\n\nWe can add multiple elements to an already existing list using the `addAll` method. Again, the only condition is that the elements you add must all be of the same type as the elements of the list.\n\nThe `addAll` method also has a single parameter which is a list. The list should contain the elements you want to add to an already existing list. The type of the parameter is `List<dataType>`, where the data type depends on the list you call the method on.\n\nIn conclusion, `addAll` basically merges the elements of two lists into one. \n\nThe general syntax is as follows.\n\n","mdHtml":"<h2 id=\"adding-multiple-elements\">Adding Multiple Elements</h2>\n<p>We can add multiple elements to an already existing list using the <code>addAll</code> method. Again, the only condition is that the elements you add must all be of the same type as the elements of the list.</p>\n<p>The <code>addAll</code> method also has a single parameter which is a list. The list should contain the elements you want to add to an already existing list. The type of the parameter is <code>List&lt;dataType&gt;</code>, where the data type depends on the list you call the method on.</p>\n<p>In conclusion, <code>addAll</code> basically merges the elements of two lists into one.</p>\n<p>The general syntax is as follows.</p>\n","cursorPosition":{"line":0,"ch":0},"comp_id":"b7e98340-248b-467c-a7a4-e05d1370c173"},"hash":"20","iteration":0},{"type":"MxGraphWidget","mode":"view","content":{"prevXml":"<mxGraphModel><root><mxCell id=\"0\"/><mxCell id=\"1\" parent=\"0\"/><mxCell id=\"9670\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 36px&quot;&gt;&lt;b&gt;&lt;font color=&quot;#00d2b8&quot;&gt;listName&lt;/font&gt;&lt;font color=&quot;#f95700&quot;&gt;.&lt;/font&gt;&lt;font color=&quot;#0081c6&quot;&gt;addAll(&lt;/font&gt;&lt;font color=&quot;#f95700&quot;&gt;[&lt;/font&gt;&lt;font color=&quot;#00d2b8&quot;&gt;elem 1, elem 2, ...elem n&lt;/font&gt;&lt;font color=&quot;#f95700&quot;&gt;]&lt;/font&gt;&lt;font color=&quot;#0081c6&quot;&gt;)&lt;/font&gt;&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"-810\" y=\"90\" width=\"990\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"7559\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0.75;entryX=0;entryY=0.75;jettySize=auto;orthogonalLoop=1;\" parent=\"1\" source=\"9670\" target=\"9670\" edge=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell></root></mxGraphModel>","svg":"","path":"/api/collection/10370001/6069685319630848/page/5953703007748096/image/5781840763813888","caption":"","comp_id":"44dacbef-c7a9-4728-bddc-88df728747a4","waInstantlyOpened":true,"prevSvg":"","xml":"<mxGraphModel><root><mxCell id=\"0\"/><mxCell id=\"1\" parent=\"0\"/><mxCell id=\"9670\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 36px&quot;&gt;&lt;b&gt;&lt;font color=&quot;#00d2b8&quot;&gt;listName&lt;/font&gt;&lt;font color=&quot;#f95700&quot;&gt;.&lt;/font&gt;&lt;font color=&quot;#0081c6&quot;&gt;addAll(&lt;/font&gt;&lt;font color=&quot;#f95700&quot;&gt;[&lt;/font&gt;&lt;font color=&quot;#00d2b8&quot;&gt;elem 1, elem 2, ...elem n&lt;/font&gt;&lt;font color=&quot;#f95700&quot;&gt;]&lt;/font&gt;&lt;font color=&quot;#0081c6&quot;&gt;)&lt;/font&gt;&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"-810\" y=\"90\" width=\"990\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"7559\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0.75;entryX=0;entryY=0.75;jettySize=auto;orthogonalLoop=1;\" parent=\"1\" source=\"9670\" target=\"9670\" edge=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell><mxCell id=\"312\" value=\"&lt;font face=&quot;Courier New&quot; color=&quot;#00a4e4&quot;&gt;&lt;span style=&quot;font-size: 36px&quot;&gt;&lt;b&gt;OR&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"-355\" y=\"190\" width=\"80\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"1\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 36px&quot;&gt;&lt;b&gt;&lt;font color=&quot;#00d2b8&quot;&gt;listName&lt;/font&gt;&lt;font color=&quot;#f95700&quot;&gt;.&lt;/font&gt;&lt;font color=&quot;#0081c6&quot;&gt;addAll(&lt;/font&gt;&lt;font color=&quot;#00d2b8&quot;&gt;newListName&lt;/font&gt;&lt;font color=&quot;#0081c6&quot;&gt;)&lt;/font&gt;&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" vertex=\"1\" parent=\"1\"><mxGeometry x=\"-625\" y=\"310\" width=\"620\" height=\"20\" as=\"geometry\"/></mxCell></root></mxGraphModel>","prevPath":"/api/collection/10370001/6069685319630848/page/5953703007748096/image/6153457507500032"},"hash":"21","iteration":0},{"type":"MarkdownEditor","mode":"view","content":{"version":"2.0","text":"Let's add two more vegetables to our `listOfVegetables`.","mdHtml":"<p>Letâ€™s add two more vegetables to our <code>listOfVegetables</code>.</p>\n","cursorPosition":{"line":0,"ch":0},"comp_id":"4fc9d55c-b3af-4a6f-ac13-c0f32e11a4b2"},"hash":"22","iteration":0},{"type":"Code","mode":"view","content":{"solutionContent":"\n\n\n","codeKeys":[{"codeKeysToReplace":[]}],"judgeContent":null,"hiddenCodeContent":{"prependCode":"\n\n","appendCode":"\n\n","codeSelection":"prependCode"},"enableStdin":false,"caption":"","theme":"default","evaluateWithoutExecution":false,"comp_id":"8b04db47-5d15-4122-8b9a-3b5bbd9a20eb","staticEntryFileName":true,"highlightedLines":"4","judgeContentPrepend":"\n\n\n","timeLimit":30,"staticEntryName":true,"specialInput":"no-input","allowDownload":false,"evaluateLanguage":null,"additionalContent":[],"judgeHints":null,"showSolution":false,"selectedIndex":0,"judge":false,"treatOutputAsHTML":false,"version":"7.0","title":"","language":"dart","content":"main() {\n  var listOfVegetables = ['potato', 'carrot', 'cucumber', 'cabbage'];\n\n  listOfVegetables.addAll(['broccoli', 'zucchini']);\n\n  print(listOfVegetables);\n}","entryFileName":"main.dart","initiateCodeKeyReplacement":false,"enableHiddenCode":false,"dockerJob":{},"runnable":true},"hash":"23","iteration":0},{"type":"MarkdownEditor","mode":"view","content":{"version":"2.0","text":"## Removing a Single Element\n\nTo remove a single element from an already existing list, we can use the `removeAt` method which removes the element at the specified index.\n\nThe `removeAt` method has a single parameter which is the index of the element you want to remove. The type of the parameter is `int`.\n\nThe general syntax is as follows.","mdHtml":"<h2 id=\"removing-a-single-element\">Removing a Single Element</h2>\n<p>To remove a single element from an already existing list, we can use the <code>removeAt</code> method which removes the element at the specified index.</p>\n<p>The <code>removeAt</code> method has a single parameter which is the index of the element you want to remove. The type of the parameter is <code>int</code>.</p>\n<p>The general syntax is as follows.</p>\n","cursorPosition":{"line":0,"ch":0},"comp_id":"e1056e18-a465-46d7-8799-2725bfe655fd"},"hash":"24","iteration":0},{"type":"MxGraphWidget","mode":"view","content":{"prevXml":"<mxGraphModel><root><mxCell id=\"0\"/><mxCell id=\"1\" parent=\"0\"/><mxCell id=\"9670\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 36px&quot;&gt;&lt;b&gt;&lt;font color=&quot;#00d2b8&quot;&gt;listName&lt;/font&gt;&lt;font color=&quot;#f95700&quot;&gt;.&lt;/font&gt;&lt;font color=&quot;#0081c6&quot;&gt;removeAt(&lt;/font&gt;&lt;font color=&quot;#00d2b8&quot;&gt;index&lt;/font&gt;&lt;font color=&quot;#0081c6&quot;&gt;)&lt;/font&gt;&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"-670\" y=\"90\" width=\"520\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"7559\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0.75;entryX=0;entryY=0.75;jettySize=auto;orthogonalLoop=1;\" parent=\"1\" source=\"9670\" target=\"9670\" edge=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell></root></mxGraphModel>","svg":"","path":"/api/collection/10370001/6069685319630848/page/5953703007748096/image/6201073192665088","caption":"","comp_id":"543eca9f-92bf-44cf-9a34-cc6afba86e56","waInstantlyOpened":true,"prevSvg":"","xml":"<mxGraphModel><root><mxCell id=\"0\"/><mxCell id=\"1\" parent=\"0\"/><mxCell id=\"9670\" value=\"&lt;font face=&quot;Courier New&quot; style=&quot;font-size: 36px&quot;&gt;&lt;b&gt;&lt;font color=&quot;#00d2b8&quot;&gt;listName&lt;/font&gt;&lt;font color=&quot;#f95700&quot;&gt;.&lt;/font&gt;&lt;font color=&quot;#0081c6&quot;&gt;removeAt(&lt;/font&gt;&lt;font color=&quot;#00d2b8&quot;&gt;index of element to be removed&lt;/font&gt;&lt;font color=&quot;#0081c6&quot;&gt;)&lt;/font&gt;&lt;/b&gt;&lt;/font&gt;\" style=\"text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;\" parent=\"1\" vertex=\"1\"><mxGeometry x=\"-670\" y=\"90\" width=\"1100\" height=\"20\" as=\"geometry\"/></mxCell><mxCell id=\"7559\" style=\"edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0.75;entryX=0;entryY=0.75;jettySize=auto;orthogonalLoop=1;\" parent=\"1\" source=\"9670\" target=\"9670\" edge=\"1\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell></root></mxGraphModel>","prevPath":"/api/collection/10370001/6069685319630848/page/5953703007748096/image/5735260945907712"},"hash":"25","iteration":0},{"type":"MarkdownEditor","mode":"view","content":{"version":"2.0","text":"Let's remove some vegetables from `listOfVegetables`. ","mdHtml":"<p>Letâ€™s remove some vegetables from <code>listOfVegetables</code>.</p>\n","cursorPosition":{"line":0,"ch":0},"comp_id":"c790ac07-87fe-476a-8ac2-cca6e02223e3"},"hash":"26","iteration":0},{"type":"Code","mode":"view","content":{"solutionContent":"\n\n\n","codeKeys":[{"codeKeysToReplace":[]}],"judgeContent":null,"hiddenCodeContent":{"prependCode":"\n\n","appendCode":"\n\n","codeSelection":"prependCode"},"enableStdin":false,"caption":"","theme":"default","evaluateWithoutExecution":false,"comp_id":"e705676d-ec28-4472-b3bd-f50c7bbe3f2d","staticEntryFileName":true,"highlightedLines":"4\n7","judgeContentPrepend":"\n\n\n","timeLimit":30,"staticEntryName":true,"specialInput":"no-input","allowDownload":false,"evaluateLanguage":null,"additionalContent":[],"judgeHints":null,"showSolution":false,"selectedIndex":0,"judge":false,"treatOutputAsHTML":false,"version":"7.0","title":"","language":"dart","content":"main() {\n  var listOfVegetables = ['potato', 'carrot', 'cucumber', 'cabbage', 'broccoli', 'zucchini'];\n\n  listOfVegetables.removeAt(0);\n  print(listOfVegetables);\n\n  listOfVegetables.removeAt(2);\n  print(listOfVegetables);\n}","entryFileName":"main.dart","initiateCodeKeyReplacement":false,"enableHiddenCode":false,"dockerJob":{},"runnable":true},"hash":"27","iteration":0},{"type":"MarkdownEditor","mode":"view","content":{"version":"2.0","text":"If you know which element you want to remove but don't know it's index, you can use the `indexOf` method we discussed in a previous lesson to find the index of an element.\n\nLet's find the index of 'carrot' and remove it from our `listOfVegetables`.","mdHtml":"<p>If you know which element you want to remove but donâ€™t know itâ€™s index, you can use the <code>indexOf</code> method we discussed in a previous lesson to find the index of an element.</p>\n<p>Letâ€™s find the index of â€˜carrotâ€™ and remove it from our <code>listOfVegetables</code>.</p>\n","cursorPosition":{"line":0,"ch":0},"comp_id":"5e8573d5-6994-432b-b2b3-e61cd8a09f47"},"hash":"28","iteration":0},{"type":"Code","mode":"view","content":{"solutionContent":"\n\n\n","codeKeys":[{"codeKeysToReplace":[]}],"judgeContent":null,"hiddenCodeContent":{"prependCode":"\n\n","appendCode":"\n\n","codeSelection":"prependCode"},"enableStdin":false,"caption":"","theme":"default","evaluateWithoutExecution":false,"comp_id":"08d008d4-965c-489a-898d-a8c81527de1c","staticEntryFileName":true,"highlightedLines":"4 5","judgeContentPrepend":"\n\n\n","timeLimit":30,"staticEntryName":true,"specialInput":"no-input","allowDownload":false,"evaluateLanguage":null,"additionalContent":[],"judgeHints":null,"showSolution":false,"selectedIndex":0,"judge":false,"treatOutputAsHTML":false,"version":"7.0","title":"","language":"dart","content":"main() {\n  var listOfVegetables = ['carrot', 'cucumber', 'zucchini'];\n\n  var carrotIndex = listOfVegetables.indexOf('carrot');\n  listOfVegetables.removeAt(carrotIndex);\n\n  print(listOfVegetables);\n}","entryFileName":"main.dart","initiateCodeKeyReplacement":false,"enableHiddenCode":false,"dockerJob":{},"runnable":true},"hash":"29","iteration":0},{"type":"MarkdownEditor","mode":"view","content":{"version":"2.0","text":"The final `listOfVegetables` now only contains two elements, namely 'cucumber' and 'zucchini'.","mdHtml":"<p>The final <code>listOfVegetables</code> now only contains two elements, namely â€˜cucumberâ€™ and â€˜zucchiniâ€™.</p>\n","cursorPosition":{"line":0,"ch":0},"comp_id":"6de0cf4f-9476-46dc-b6df-dc4601356c94"},"hash":"30","iteration":0},{"type":"MarkdownEditor","mode":"edit","content":{"version":"2.0","text":"## Removing All Elements\n\nTo remove all the elements from a list, we can simply call the `clear` method which takes no parameters.\n\nLet's remove all the elements from `listOfVegetables`.","mdHtml":"<h2 id=\"removing-all-elements\">Removing All Elements</h2>\n<p>To remove all the elements from a list, we can simply call the <code>clear</code> method which takes no parameters.</p>\n<p>Letâ€™s remove all the elements from <code>listOfVegetables</code>.</p>\n","cursorPosition":{"line":0,"ch":0},"comp_id":"e00360c7-6ff7-4d6b-add7-5dfac0546c2f"},"hash":"31","iteration":2},{"type":"Code","mode":"view","content":{"solutionContent":"\n\n\n","codeKeys":[{"codeKeysToReplace":[]}],"judgeContent":null,"hiddenCodeContent":{"prependCode":"\n\n","appendCode":"\n\n","codeSelection":"prependCode"},"enableStdin":false,"caption":"","theme":"default","evaluateWithoutExecution":false,"comp_id":"c06f281e-81b9-45ef-91ab-553e3d36db91","staticEntryFileName":true,"highlightedLines":"4","judgeContentPrepend":"\n\n\n","timeLimit":30,"staticEntryName":true,"specialInput":"no-input","allowDownload":false,"evaluateLanguage":null,"additionalContent":[],"judgeHints":null,"showSolution":false,"selectedIndex":0,"judge":false,"treatOutputAsHTML":false,"version":"7.0","title":"","language":"dart","content":"main() {\n  var listOfVegetables = ['cucumber', 'zucchini'];\n\n  listOfVegetables.clear();\n\n  print(listOfVegetables);\n}","entryFileName":"main.dart","initiateCodeKeyReplacement":false,"enableHiddenCode":false,"dockerJob":{},"runnable":true},"hash":"32","iteration":0},{"type":"MarkdownEditor","mode":"view","content":{"version":"2.0","text":"When you press RUN, an empty list should be displayed.\n\n---\n\nThat wraps up our discussion on lists. Let's move on to maps in the next lesson.","mdHtml":"<p>When you press RUN, an empty list should be displayed.</p>\n<hr />\n<p>That wraps up our discussion on lists. Letâ€™s move on to maps in the next lesson.</p>\n","cursorPosition":{"line":0,"ch":0},"comp_id":"56fe1b71-4a70-4bdb-bc3b-744b2dea1359"},"hash":"33","iteration":0}],"summary":{"titleUpdated":true},"pageProperties":{}}
